package microservice.examenes.models.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
@Table(name="examenes")
public class Examen implements Serializable {
	
	private static final long serialVersionUID = -1368620360641536608L;

	
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public Date getCreateAt() {
		return createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}
	
	@PrePersist
	public void prePersist() {
		this.createAt = new Date();
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	private String nombre;
	@Temporal(TemporalType.TIMESTAMP)	//FECHA COMPLETA.
	@Column(name="create_at")
	private Date createAt;
	@OneToMany(mappedBy="examen", fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)	//33 : CUANDO SE ELIMINA UN EXAMEN SE TIENEN Q ELIMINAR SUS PREGUNTAS. CUANDO SE CREA UN EXAMEN TAMBN SE CREAN SUS PREGUNTAS. LA IDEA ES Q SE CREE TODO JUNTO, EL EXAMEN Y LAS PREGUNTAS, POR ESO "ALL".   	 // orphanRemoval = true) : CADA VEZ Q SE ELIMINA UNA PREGUNTA DE LA LISTA, LA PREGUNTA ELIMINADA TIENE Q ASIGNAR LA REFERENCIA DEL EXAMEN EN NULL.   //TAMBN, CUALQUIER PREGUNTA QUE NO ESTÉ ASIGNADA A UN EXAMEN, LA VA A ELIMINAR.  //mappedBy="examen" : PARA ESTABLECER LA RELACIÓN BI DIRECCIONAL.
	private List<Pregunta>preguntas;
}
