package microservice.cursos.controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import microservice.alumnos.commons.models.entity.Alumno;
import microservice.commons.controllers.CommonController;
import microservice.cursos.models.entity.Curso;
import microservice.cursos.models.service.ICursoService;

@RestController
public class CursoController extends CommonController<Curso,ICursoService>{
	
	
	@PutMapping("/{id}")
	public ResponseEntity<?>editar(@RequestBody Curso curso, @PathVariable Long id){
		Optional<Curso>o = this.service.porId(id);
		if(!o.isPresent()) {
			return ResponseEntity.notFound().build();
		}
		Curso cursodb = o.get();
		cursodb.setNombre(curso.getNombre());
		return ResponseEntity.status(HttpStatus.CREATED).body(this.service.save(cursodb));
	}
	
	
	//DOS METODOS DEL TIPO  PUT QUE SON PARA MODIFICAR EL CURSO. PARA ASIGNAR ALUMNOS Y ELIMINAR ALUMNOS.
	
	//RECIBE POR EL CUERPO DEL REQUEST, UN ARREGLO DE ALUMNOS.
	@PutMapping("/{id}/asignar-alumnos")
	public ResponseEntity<?>asignarAlumno(@RequestBody List<Alumno>alumnos, @PathVariable Long id){
		Optional<Curso>o = this.service.porId(id);
		if(!o.isPresent()) {
			return ResponseEntity.notFound().build();
		}
		Curso cursodb = o.get();
		alumnos.forEach(a -> {
			cursodb.addAlumnos(a);
		});
		return ResponseEntity.status(HttpStatus.CREATED).body(this.service.save(cursodb));
	}
	
	
	@PutMapping("/{id}/eliminar-alumno")
	public ResponseEntity<?>eliminarAlumnos(@RequestBody Alumno alumno, @PathVariable Long id){
		Optional<Curso>o = this.service.porId(id);
		if(!o.isPresent()) {
			return ResponseEntity.notFound().build();
		}
		Curso cursodb = o.get();
		alumnos.forEach(a -> {
			cursodb.addAlumnos(a);
		});
		return ResponseEntity.status(HttpStatus.CREATED).body(this.service.save(cursodb));
	}
		
	
}
